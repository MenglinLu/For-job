常见排序算法包括：
LowB三人组：冒泡排序、选择排序、插入排序 算法复杂度O（n^2）
NB三人组：快速排序、堆排序、归并排序
其他排序：希尔排序、计数排序、基数排序等

1.冒泡排序(O(n^2))
算法原理：分为有序区和无序区，刚开始有序区元素个数为0，无序区个数为n，每次迭代遍历无序区，对比元素，相邻元素比较若元素大则交换顺序，每次可得到无序区的一个元素最大值放至有序区。

2.选择排序(O(n^2))
算法原理：分为有序区和无序区，每次从无序区选择一个最小值放至有序区，有序区增加一个数、无序区减少一个数

3.插入排序(O(n^2))
算法原理：像打扑克一样，分有序区和无序区，从无序区第一个元素开始，将其与有序区每个元素对比，若小于这个元素则插入其左边，若大于这个元素则插入其右边。对于剩下的元素也一样处理。每次迭代有序区增加一个元素，无序区减少一个元素

4.快速排序(O(nlog2n)) 不稳定排序
算法原理：取第一个元素p，使元素归位，列表被p分成两部分，左边都比p小，右边都比p大，递归完成排序。
归位的方法：用一个变量存储当前被拿出来的元素temp，一个游标指示第一个元素i，一个游标指示最后一个元素j。首先对比temp和j所指的元素值，若j的值更大，则一直j--，直到碰到j的值小，则将j对应的值赋给i所指的值，然后从左边开始看，若i所指的值比temp小，则i++,直到遇到i所指的值比j大，则交换j和i所指的元素值。直至i和j相等时说明本轮迭代结束，即完成了一次归位。

5.堆排序

6.归并排序

7.希尔排序


